@import "tailwindcss";

@custom-variant dark (&:is(.dark *));

@theme {
  --font-sans: var(--font-geist-sans), ui-sans-serif, system-ui, sans-serif,
    "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
}

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  /* Font settings */
  :root {
    --font-sans: var(--font-geist-sans), ui-sans-serif, system-ui, sans-serif,
      "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    color-scheme: light;
    --transition-speed: 0.3s;
    --primary-light: #26A96C;
    --primary-dark: #198754;
    --column-bg-light: rgba(66, 110, 140, 0.7);
    --column-bg-dark: rgba(66, 110, 140, 0.7);
    --card-bg-light: rgba(82, 137, 175, 0.85);
    --card-bg-dark: rgba(82, 137, 175, 0.85);
    --border-light: rgba(210, 220, 230, 0.5);
    --border-dark: rgba(255, 255, 255, 0.1);
    --glass-blur: 12px;
    --glass-border-width: 1px;
    --glass-shadow-intensity: 0.1;
    --glass-bg-opacity-light: 0.65;
    --glass-bg-opacity-dark: 0.65;
    --glass-border-opacity-light: 0.2;
    --glass-border-opacity-dark: 0.1;
    --glass-hover-bg-opacity-light: 0.8;
    --glass-hover-bg-opacity-dark: 0.8;
    --glass-hover-border-opacity-light: 0.4;
    --glass-hover-border-opacity-dark: 0.2;
  }

  .dark {
    color-scheme: dark;
    --primary-light: #1A7F56;
    --primary-dark: #0A3622;
    --column-bg-light: rgba(66, 110, 140, 0.7);
    --column-bg-dark: rgba(66, 110, 140, 0.7);
    --card-bg-light: rgba(82, 137, 175, 0.85);
    --card-bg-dark: rgba(82, 137, 175, 0.85);
    --border-light: rgba(255, 255, 255, 0.2);
    --border-dark: rgba(255, 255, 255, 0.1);
    --glass-blur: 14px;
    --glass-shadow-intensity: 0.2;
    --glass-bg-opacity-light: 0.65;
    --glass-bg-opacity-dark: 0.65;
    --glass-border-opacity-light: 0.15;
    --glass-border-opacity-dark: 0.1;
    --glass-hover-bg-opacity-light: 0.8;
    --glass-hover-bg-opacity-dark: 0.8;
    --glass-hover-border-opacity-light: 0.3;
    --glass-hover-border-opacity-dark: 0.2;
  }

  /* Apply theme colors to html and body */
  html, body {
    color: var(--text-color);
  }

  /* Remove background patterns and use solid color */
  html.light {
    background: linear-gradient(180deg, #f8fafc 0%, #ffffff 100%) !important;
  }

  /* Remove background patterns for dark mode */
  html.dark {
    background: linear-gradient(180deg, #0f172a 0%, #000000 100%) !important;
  }

  /* Smooth theme transitions */
  body, body *, body *::before, body *::after {
    transition: background-color var(--transition-speed) ease-in-out,
                border-color var(--transition-speed) ease-in-out, 
                color var(--transition-speed) ease-in-out,
                fill var(--transition-speed) ease-in-out,
                stroke var(--transition-speed) ease-in-out,
                opacity var(--transition-speed) ease-in-out,
                box-shadow var(--transition-speed) ease-in-out,
                backdrop-filter var(--transition-speed) ease-in-out;
  }

  /* Exclude transitions from certain elements */
  .no-transition, 
  .no-transition *, 
  .no-transition *::before, 
  .no-transition *::after {
    transition: none !important;
  }

  /* Custom scrollbar styling */
  ::-webkit-scrollbar {
    width: 6px;
    height: 6px;
  }

  ::-webkit-scrollbar-track {
    background: transparent;
  }

  ::-webkit-scrollbar-thumb {
    background: rgba(255, 255, 255, 0.15);
    border-radius: 8px;
  }

  .light ::-webkit-scrollbar-thumb {
    background: rgba(0, 0, 0, 0.15);
  }

  ::-webkit-scrollbar-thumb:hover {
    background: rgba(255, 255, 255, 0.25);
  }

  .light ::-webkit-scrollbar-thumb:hover {
    background: rgba(0, 0, 0, 0.25);
  }

  /* Hide scrollbars when not being used */
  ::-webkit-scrollbar-thumb:vertical:active,
  ::-webkit-scrollbar-thumb:horizontal:active {
    background: rgba(255, 255, 255, 0.3);
  }

  .light ::-webkit-scrollbar-thumb:vertical:active,
  .light ::-webkit-scrollbar-thumb:horizontal:active {
    background: rgba(0, 0, 0, 0.3);
  }

  /* Firefox scrollbar */
  * {
    scrollbar-width: thin;
    scrollbar-color: rgba(255, 255, 255, 0.15) transparent;
  }

  .light * {
    scrollbar-color: rgba(0, 0, 0, 0.15) transparent;
  }

  body {
    background: transparent !important;
  }

  /* Enhanced prose styling for markdown content */
  .prose {
    color: inherit;
    font-size: 14px;
    line-height: 1.6;
  }

  .prose * {
    color: var(--foreground);
  }

  .prose h1,
  .prose h2,
  .prose h3,
  .prose h4,
  .prose h5,
  .prose h6 {
    color: var(--foreground) !important;
    font-weight: 700;
    line-height: 1.3;
  }

  .prose h1 {
    font-size: 1.5rem;
    margin-top: 1.5rem;
    margin-bottom: 1rem;
  }

  .prose h2 {
    font-size: 1.25rem;
    margin-top: 1.25rem;
    margin-bottom: 0.75rem;
  }

  .prose h3 {
    font-size: 1.125rem;
    margin-top: 1rem;
    margin-bottom: 0.5rem;
  }

  .prose h4,
  .prose h5,
  .prose h6 {
    font-size: 1rem;
    margin-top: 0.75rem;
    margin-bottom: 0.5rem;
  }

  .prose h1:first-child,
  .prose h2:first-child,
  .prose h3:first-child,
  .prose h4:first-child,
  .prose h5:first-child,
  .prose h6:first-child {
    margin-top: 0;
  }

  .prose p {
    margin-top: 0;
    margin-bottom: 0.75rem;
    line-height: 1.6;
    color: var(--foreground);
  }

  .prose p:last-child {
    margin-bottom: 0;
  }

  .prose ul,
  .prose ol {
    margin-top: 0.75rem;
    margin-bottom: 0.75rem;
    padding-left: 1.5rem;
  }

  .prose li {
    margin-top: 0.25rem;
    margin-bottom: 0.25rem;
    color: var(--foreground);
  }

  .prose code {
    color: var(--foreground) !important;
    background-color: var(--muted);
    padding: 0.25rem 0.375rem;
    border-radius: 0.375rem;
    font-size: 0.875rem;
    border: 1px solid var(--border);
    font-family: ui-monospace, SFMono-Regular, "SF Mono", Consolas, "Liberation Mono", Menlo, monospace;
    font-weight: 400;
  }

  .prose pre {
    background-color: var(--muted);
    padding: 0.75rem;
    border-radius: 0.5rem;
    border: 1px solid var(--border);
    overflow-x: auto;
    margin: 0.75rem 0;
  }

  .prose pre code {
    background: transparent;
    border: none;
    padding: 0;
    color: var(--foreground);
  }

  .prose blockquote {
    border-left: 4px solid var(--border);
    padding-left: 1rem;
    color: var(--muted-foreground);
    font-style: italic;
    margin: 0.75rem 0;
  }

  .prose img {
    margin-top: 1rem;
    margin-bottom: 1rem;
    border-radius: 0.375rem;
    max-width: 100%;
    height: auto;
  }

  .prose strong {
    font-weight: 700;
    color: var(--foreground) !important;
  }

  .prose em {
    font-style: italic;
    color: var(--foreground) !important;
  }

  .prose a {
    color: var(--primary);
    text-decoration: underline;
    text-underline-offset: 2px;
    transition: text-decoration-color 0.2s ease-in-out;
  }

  .prose a:hover {
    text-decoration: none;
  }
}

/* Glassmorphic card styles */
@layer components {
  /* Column styles to ensure cards aren't clipped */
  .glass-column {
    overflow: visible !important;
    z-index: 10;
    contain: none !important; /* Prevent containment that might clip cards */
    isolation: isolate; /* Create new stacking context */
    clip-path: none !important; /* Prevent clipping */
    transform-style: preserve-3d; /* Preserve 3D positioning */
    /* Allow flexible columns to fill available space */
    flex: 1 1 0 !important;
    max-width: none !important;
    /* Spacing between columns (adjust gutter as needed) */
    margin: 0 0.25rem !important;
    /* Core column styling without filter to prevent DnD fixed-preview offset */
    border-width: var(--glass-border-width);
    transition: background-color var(--transition-speed) ease-in-out,
                border-color var(--transition-speed) ease-in-out,
                box-shadow var(--transition-speed) ease-in-out;
    background-color: rgba(66, 110, 140, var(--glass-bg-opacity-dark)); 
    border-color: rgba(255, 255, 255, var(--glass-border-opacity-dark));
  }

  /* Make sure the column's children also don't clip content */
  .glass-column > div {
    overflow: visible !important;
    contain: none !important;
    clip-path: none !important;
  }

  /* Ensure column scroll container preserves overflow visibility for hover effects */
  .glass-column .overflow-y-auto {
    overflow-y: auto !important;
    overflow-x: visible !important;
    contain: none !important;
    clip-path: none !important;
    mask-image: none !important;
    -webkit-mask-image: none !important;
  }

  /* Card wrapper for properly handling hover effects */
  .card-wrapper {
    position: relative;
    z-index: 1;
    margin-bottom: 0.25rem;
    margin-top: 0.15rem;
    margin-left: 2px;
    margin-right: 2px;
    padding-left: 1px;
    padding-right: 1px;
    padding-top: 2px;
    padding-bottom: 2px;
    overflow: visible !important;
    width: calc(100% - 6px);
    contain: none !important;
    clip-path: none !important;
    transition: transform 150ms cubic-bezier(0.16,1,0.3,0.55), 
                box-shadow 150ms cubic-bezier(0.16,1,0.3,0.55),
                opacity 150ms cubic-bezier(0.16,1,0.3,0.55);
    /* Use GPU acceleration for smoother animations */
    will-change: transform;
    transform: translate3d(0, 0, 0);
    -webkit-backface-visibility: hidden;
  }

  .card-wrapper:hover {
    z-index: 50; /* Ensure card appears above all other elements when hovered */
  }

  /* This ensures the card can expand outside its container without being clipped */
  .card-wrapper .glass-card {
    margin: 0;
    isolation: isolate;
    /* Match the transition timing with the wrapper */
    transition: transform 150ms cubic-bezier(0.16,1,0.3,0.55), 
                box-shadow 150ms cubic-bezier(0.16,1,0.3,0.55);
    border-radius: 0.5rem;
    backdrop-filter: blur(16px);
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12),
                0 1px 2px rgba(0, 0, 0, 0.24);
    /* Use GPU acceleration */
    will-change: transform, box-shadow;
  }

  /* Specific styles for cards using the glass effect */
  .glass-card {
    /* Apply core glass styles directly */
    backdrop-filter: blur(var(--glass-blur));
    -webkit-backdrop-filter: blur(var(--glass-blur));
    border-width: var(--glass-border-width);
    transition: background-color var(--transition-speed) ease-in-out,
                border-color var(--transition-speed) ease-in-out,
                box-shadow var(--transition-speed) ease-in-out;
    background-color: rgba(82, 137, 175, var(--glass-bg-opacity-dark)); 
    border-color: rgba(255, 255, 255, var(--glass-border-opacity-dark));
    color: var(--text-color);
  }

  .light .glass-card {
    /* Light theme overrides for cards */
    background-color: rgba(82, 137, 175, var(--glass-bg-opacity-light));
    border-color: rgba(210, 220, 230, var(--glass-border-opacity-light));
    color: #ffffff; 
  }

  /* Elevated state (e.g., for dragging) - keep this */
  .glass-card.elevated {
    @apply shadow-xl;
    /* Maybe slightly increase blur or change background further */
    backdrop-filter: blur(calc(var(--glass-blur) * 1.1));
    -webkit-backdrop-filter: blur(calc(var(--glass-blur) * 1.1));
    background-color: rgba(82, 137, 175, calc(var(--glass-hover-bg-opacity-dark) * 1.1)); 
    border-color: rgba(255, 255, 255, calc(var(--glass-hover-border-opacity-dark) * 1.2));
  }

  .light .glass-card.elevated {
    background-color: rgba(82, 137, 175, calc(var(--glass-hover-bg-opacity-light) * 1.1)); 
    border-color: rgba(210, 220, 230, calc(var(--glass-hover-border-opacity-light) * 1.2));
    box-shadow: 0 8px 15px rgba(50, 50, 80, calc(var(--glass-shadow-intensity) * 1.5));
  }

  /* Refined glass column styles */
  .glass-column {
    /* Apply core glass styles directly */
    backdrop-filter: blur(var(--glass-blur));
    -webkit-backdrop-filter: blur(var(--glass-blur));
    border-width: var(--glass-border-width);
    transition: background-color var(--transition-speed) ease-in-out,
                border-color var(--transition-speed) ease-in-out,
                box-shadow var(--transition-speed) ease-in-out;
    background-color: rgba(66, 110, 140, var(--glass-bg-opacity-dark)); 
    border-color: rgba(255, 255, 255, var(--glass-border-opacity-dark));
    /* Layout (flex, flex-col) and shadow are applied in JSX */
  }

  /* Override gutter margin for the sidebar (aside element) */
  aside.glass-column {
    margin: 0 !important;
  }

  .light .glass-column {
     /* Light theme overrides for columns */
     background-color: rgba(66, 110, 140, var(--glass-bg-opacity-light));
     border-color: rgba(210, 220, 230, var(--glass-border-opacity-light));
  }

  /* Define hover styles directly on the column */
  .dark .glass-column:hover {
    background-color: rgba(66, 110, 140, var(--glass-hover-bg-opacity-dark));
    border-color: rgba(255, 255, 255, var(--glass-hover-border-opacity-dark));
    z-index: 15;
  }

  .light .glass-column:hover {
    background-color: rgba(66, 110, 140, var(--glass-hover-bg-opacity-light));
    border-color: rgba(210, 220, 230, var(--glass-hover-border-opacity-light));
    z-index: 15;
  }

  /* Dragging state */
  .card-wrapper.dragging {
    pointer-events: none;
    z-index: 9999 !important;
    opacity: 1;
    margin: 0 !important;
    padding: 0 !important;
    /* Remove scale transform */
    transform: translate3d(0, 0, 0); /* Keep GPU acceleration */
    box-shadow: 0 8px 15px rgba(0, 0, 0, 0.15),
                0 3px 8px rgba(0, 0, 0, 0.15); /* Slightly enhance shadow */
  }

  .card-wrapper.dragging .glass-card {
    /* Reset potential transforms from hover state */
    transform: none;
    /* Match shadow with wrapper */
    box-shadow: 0 8px 15px rgba(0, 0, 0, 0.15),
                0 3px 8px rgba(0, 0, 0, 0.15);
  }

  /* Remove element flicker during DnD operations */
  [data-dnd-draggable-id] {
    transform-origin: 0 0;
    contain: layout;
  }

  /* Add smooth movement to DragOverlay */
  .DragOverlay {
    transition-property: transform, width, height;
    transition-timing-function: cubic-bezier(0.16,1,0.3,0.55);
    transition-duration: 150ms;
    transform-origin: 0 0;
    z-index: 9999;
  }
}

/* Styles for the cursor light effect */
.cursor-light {
  position: fixed;
  width: 400px; /* Size of the light effect */
  height: 400px;
  border-radius: 50%;
  pointer-events: none; /* Make sure it doesn't interfere with clicks */
  z-index: 9999; /* Ensure it's above most content */
  background: radial-gradient(
    circle,
    rgba(255, 255, 255, 0.05) 0%, /* Soft white center */
    rgba(255, 255, 255, 0.02) 40%,
    transparent 70% /* Fades out */
  );
  filter: blur(40px); /* Soften the gradient edges */
  opacity: 0.8; /* Adjust overall visibility */
  transition: opacity 0.2s ease-out; /* Smooth fade in/out if needed */
  mix-blend-mode: overlay; /* Blend with content below */
}

.light .cursor-light {
  background: radial-gradient(
    circle,
    rgba(0, 0, 0, 0.03) 0%, /* Soft dark center in light mode */
    rgba(0, 0, 0, 0.01) 40%,
    transparent 70%
  );
  opacity: 0.6;
  mix-blend-mode: multiply; /* Different blend mode for light theme */
}

/* Additional utilities */
@layer utilities {
  .text-primary-light {
    color: var(--primary-light);
  }

  .text-primary-dark {
    color: var(--primary-dark);
  }

  /* Add smooth hover motion to elements */
  .hover-lift {
    transition: transform 0.2s ease-out, box-shadow 0.2s ease-out;
  }

  .hover-lift:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
  }

  .dark .hover-lift:hover {
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.25);
  }
}

@theme inline {
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);
  --color-popover: var(--popover);
  --color-popover-foreground: var(--popover-foreground);
  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);
  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);
  --color-accent: var(--accent);
  --color-accent-foreground: var(--accent-foreground);
  --color-destructive: var(--destructive);
  --color-border: var(--border);
  --color-input: var(--input);
  --color-ring: var(--ring);
  --color-chart-1: var(--chart-1);
  --color-chart-2: var(--chart-2);
  --color-chart-3: var(--chart-3);
  --color-chart-4: var(--chart-4);
  --color-chart-5: var(--chart-5);
  --color-sidebar: var(--sidebar);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-ring: var(--sidebar-ring);
}

:root {
  --radius: 0.625rem;
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.129 0.042 264.695);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.129 0.042 264.695);
  --primary: oklch(0.208 0.042 265.755);
  --primary-foreground: oklch(0.984 0.003 247.858);
  --secondary: oklch(0.968 0.007 247.896);
  --secondary-foreground: oklch(0.208 0.042 265.755);
  --muted: oklch(0.968 0.007 247.896);
  --muted-foreground: oklch(0.554 0.046 257.417);
  --accent: oklch(0.968 0.007 247.896);
  --accent-foreground: oklch(0.208 0.042 265.755);
  --destructive: oklch(0.577 0.245 27.325);
  --border: oklch(0.929 0.013 255.508);
  --input: oklch(0.929 0.013 255.508);
  --ring: oklch(0.704 0.04 256.788);
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --sidebar: oklch(0.984 0.003 247.858);
  --sidebar-foreground: oklch(0.129 0.042 264.695);
  --sidebar-primary: oklch(0.208 0.042 265.755);
  --sidebar-primary-foreground: oklch(0.984 0.003 247.858);
  --sidebar-accent: oklch(0.968 0.007 247.896);
  --sidebar-accent-foreground: oklch(0.208 0.042 265.755);
  --sidebar-border: oklch(0.929 0.013 255.508);
  --sidebar-ring: oklch(0.704 0.04 256.788);
  --background: oklch(1 0 0);
  --foreground: oklch(0.129 0.042 264.695);
}

.dark {
  --background: oklch(0.129 0.042 264.695);
  --foreground: oklch(0.984 0.003 247.858);
  --card: oklch(0.208 0.042 265.755);
  --card-foreground: oklch(0.984 0.003 247.858);
  --popover: oklch(0.208 0.042 265.755);
  --popover-foreground: oklch(0.984 0.003 247.858);
  --primary: oklch(0.929 0.013 255.508);
  --primary-foreground: oklch(0.208 0.042 265.755);
  --secondary: oklch(0.279 0.041 260.031);
  --secondary-foreground: oklch(0.984 0.003 247.858);
  --muted: oklch(0.279 0.041 260.031);
  --muted-foreground: oklch(0.704 0.04 256.788);
  --accent: oklch(0.279 0.041 260.031);
  --accent-foreground: oklch(0.984 0.003 247.858);
  --destructive: oklch(0.704 0.191 22.216);
  --border: oklch(1 0 0 / 10%);
  --input: oklch(1 0 0 / 15%);
  --ring: oklch(0.551 0.027 264.364);
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.208 0.042 265.755);
  --sidebar-foreground: oklch(0.984 0.003 247.858);
  --sidebar-primary: oklch(0.488 0.243 264.376);
  --sidebar-primary-foreground: oklch(0.984 0.003 247.858);
  --sidebar-accent: oklch(0.279 0.041 260.031);
  --sidebar-accent-foreground: oklch(0.984 0.003 247.858);
  --sidebar-border: oklch(1 0 0 / 10%);
  --sidebar-ring: oklch(0.551 0.027 264.364);
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
  }
}

/* Glass morphic light elements (badges, small buttons) */
.glass-morph-light {
  backdrop-filter: blur(var(--glass-blur));
  -webkit-backdrop-filter: blur(var(--glass-blur));
  background-color: rgba(66, 110, 140, var(--glass-bg-opacity-dark)); 
  border: var(--glass-border-width) solid rgba(255, 255, 255, var(--glass-border-opacity-dark));
  transition: background-color var(--transition-speed) ease-in-out,
              border-color var(--transition-speed) ease-in-out;
}

.light .glass-morph-light {
  background-color: rgba(66, 110, 140, var(--glass-bg-opacity-light));
  border-color: rgba(210, 220, 230, var(--glass-border-opacity-light));
}

.dark .glass-morph-light:hover {
  background-color: rgba(66, 110, 140, var(--glass-hover-bg-opacity-dark));
  border-color: rgba(255, 255, 255, var(--glass-hover-border-opacity-dark));
}

@media (max-width: 1200px) {
  .glass-column {
    min-width: 80vw !important;
    max-width: 95vw !important;
    width: 90vw !important;
  }
  .card-wrapper {
    margin-left: 0 !important;
    margin-right: 0 !important;
    padding-left: 0.5rem !important;
    padding-right: 0.5rem !important;
  }
  .glass-card {
    font-size: 0.95rem !important;
    padding: 0.5rem 0.75rem !important;
  }
  .glass-morph-light {
    font-size: 0.9rem !important;
    padding: 0.25rem 0.5rem !important;
  }
  .glass-button {
    font-size: 0.9rem !important;
    padding: 0.25rem 0.75rem !important;
  }
}

@media (max-width: 600px) {
  .glass-column {
    min-width: 85vw !important;
    max-width: 100vw !important;
    width: 90vw !important;
  }
  .card-wrapper {
    margin-bottom: 0.5rem !important;
    margin-top: 0.2rem !important;
    padding-left: 0.25rem !important;
    padding-right: 0.25rem !important;
    padding-top: 2px !important;
    padding-bottom: 2px !important;
  }
  .glass-card {
    font-size: 0.9rem !important;
    padding: 0.4rem 0.5rem !important;
  }
  .glass-morph-light {
    font-size: 0.85rem !important;
    padding: 0.15rem 0.3rem !important;
  }
  .glass-button {
    font-size: 0.85rem !important;
    padding: 0.15rem 0.5rem !important;
  }
  .glass-column .overflow-y-auto {
    max-height: 60vh !important;
  }
  .glass-column > div {
    padding: 0 !important;
  }
  .glass-column .card-wrapper {
    min-width: 0 !important;
  }
  .glass-column .glass-card {
    min-width: 0 !important;
  }
  .glass-column .glass-morph-light {
    min-width: 0 !important;
  }
  .glass-column .glass-button {
    min-width: 0 !important;
  }
  .banner-padding {
    padding-left: 0.5rem !important;
    padding-right: 0.5rem !important;
    padding-top: 0.5rem !important;
    padding-bottom: 0.5rem !important;
  }
}

/* Utility for matching banner and column padding */
.banner-padding {
  padding-left: 0.75rem !important;
  padding-right: 0.75rem !important;
  padding-top: 0.75rem !important;
  padding-bottom: 0.75rem !important;
}

/* Add styling for empty column drop area */
.empty-column-drop-area {
  min-height: 70px;
  border: 2px dashed rgba(255, 255, 255, 0.2);
  border-radius: 0.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0.5rem 0;
  transition: all 150ms ease;
}

.empty-column-drop-area.drag-over {
  background-color: rgba(255, 255, 255, 0.1);
  border-color: rgba(255, 255, 255, 0.3);
}

/* Special styling for column drag overlay */
.column-drag-overlay {
  opacity: 0.8;
  /* keep full size during drag */
  transform: none;
  pointer-events: none;
  /* no transform-origin needed */
  transition: transform 150ms cubic-bezier(0.16,1,0.3,0.55);
}

/* Make the dragging class elevate and scale the card in one smooth motion */
.card-wrapper.dragging {
  pointer-events: none;
  z-index: 9999 !important;
  opacity: 1;
  margin: 0 !important;
  padding: 0 !important;
  /* Slight scale for visual feedback */
  transform: scale(1.02) translate3d(0, 0, 0);
}

/* Prevent column hover effect during card drag */
html.card-dragging-active .dark .glass-column:hover {
  background-color: rgba(66, 110, 140, var(--glass-bg-opacity-dark)) !important;
  border-color: rgba(255, 255, 255, var(--glass-border-opacity-dark)) !important;
  z-index: 10 !important;
}
html.card-dragging-active .light .glass-column:hover {
  background-color: rgba(66, 110, 140, var(--glass-bg-opacity-light)) !important;
  border-color: rgba(210, 220, 230, var(--glass-border-opacity-light)) !important;
  z-index: 10 !important;
}

/* Prevent card dragging when card details sheet is open */
html.card-details-sheet-open .card-wrapper {
  pointer-events: none !important;
}

html.card-details-sheet-open .card-wrapper .glass-card {
  cursor: default !important;
}

/* Allow interactions with card content but not dragging */
html.card-details-sheet-open .card-wrapper .glass-card > * {
  pointer-events: auto;
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
  }
}
